version: 2.1
jobs:
  build:
    working_directory: ~/user_managemant_firstinstance
    docker:
      - image: circleci/openjdk:8-jdk-stretch
    steps:
      - checkout
      - restore_cache:
          key: user_managemant_firstinstance-{{ checksum "pom.xml" }}
      - run: mvn dependency:go-offline
      - save_cache:
          paths:
            - ~/.m2
          key: user_managemant_firstinstance-{{ checksum "pom.xml" }}
      - run: mvn clean package -DskipTests=true
      - run:
          name: Copy deployment artifacts to workspace
          command: |
            cp target/*.jar /tmp/standalone-app.jar
      - store_test_results:
          path: target/surefire-reports
      - store_artifacts:
          path: /tmp/standalone-app.jar
      - persist_to_workspace:
          root: /home/circleci/user_managemant_firstinstance
          paths: .



  Unit-Test:
    working_directory: ~/user_managemant_firstinstance
    docker:
      - image: circleci/openjdk:8-jdk-stretch
    steps:
      - checkout
      - run: mvn test
      - store_test_results:
          path: target/surefire-


  integration test:
    working_directory: ~/user_managemant_firstinstance
    docker:
      - image: circleci/openjdk:8-jdk-stretch
    steps:
      - checkout
      - run: mvn  verify -DskipTests=true
      - store_test_results:
          path: target/surefire-reports
  code review:
    working_directory: ~/user_managemant_firstinstance
    docker:
      - image: circleci/openjdk:8-jdk-stretch
    steps:
      - checkout
      - run:
          name: Analyze on SonarCloud
          command: mvn verify sonar:sonar



  Build docker image:
    machine: true
    steps:
      - attach_workspace:
          at: .
      - run: |
          Docker-compose build
      - run:
          name: Check built image availability
          command: docker images "looyas/starter_kit*"
      - persist_to_workspace:
          root: .
          paths: .


  deploy image to heroku:
    machine:
      image: ubuntu-1604:201903-01
    working_directory: ~/user_managemant_firstinstance
    steps:
      - checkout
      - run:
          name: Deploy to Heroku
          command: |
            echo $HEROKU_API_KEY | docker login --username=$HEROKU_LOGIN --password-stdin registry.heroku.com
            docker pull looyas/starter_kit:latest
            docker tag looyas/starter_kit:latest  registry.heroku.com/$HEROKU_APP_NAME/web
            docker push registry.heroku.com/$HEROKU_APP_NAME/web
      - run:
          name: "Install Heroku CLI, if necessary"
          command: |
            if [[ $(command -v heroku) == "" ]]; then
            curl https://cli-assets.heroku.com/install.sh | sh
            else
            echo "Heroku is already installed. No operation was performed."
            fi
            npm update -g heroku-cli
            heroku plugins:install heroku-repo
            heroku repo:purge_cache -a $HEROKU_APP_NAME
            echo $HEROKU_API_KEY | docker login --username=$HEROKU_LOGIN --password-stdin registry.heroku.com
            heroku container:push web --app $HEROKU_APP_NAME
            heroku container:release web -a $HEROKU_APP_NAME


  push image to DockerHub:
    machine: true
    working_directory: ~/user_managemant_firstinstance
      steps:
        - attach_workspace:
            at: .
        - run:
            name: deploy test
            command: |
             echo $DOCKER_PASS | docker login -u $DOCKER_USER --password-stdin
             docker tag $CONTAINER_BACK_NAME:$CONTAINER_TAG $DOCKER_HUB_USER/$CONTAINER_BACK_NAME:$CONTAINER_TAG
             docker push $DOCKER_HUB_USER/$CONTAINER_BACK_NAME:$CONTAINER_TAG

workflows:
  version: 2.1
  build-test-and-deploy:
    jobs:
      - build
      - Unit-Test:
          requires:
            - build
      - integration test:
          requires:
            - build
      - code review:
          context: SonarCloud
          requires:
            - build
      - Build docker image:
          requires:
            - code review
            - integration test
            - Unit-Test
      - deploy image to heroku:
          requires:
            - Build docker image
      - push image to DockerHub:
          requires:
            - Build docker image
