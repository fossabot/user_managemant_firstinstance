version: 2.1
jobs:

  build:

    working_directory: ~/user_managemant_firstinstance

    docker:
      - image: circleci/openjdk:8-jdk-stretch

    steps:

      - checkout

      - restore_cache:
          key: user_managemant_firstinstance-{{ checksum "pom.xml" }}

      - run: mvn dependency:go-offline

      - save_cache:
          paths:
            - ~/.m2
          key: user_managemant_firstinstance-{{ checksum "pom.xml" }}

      - run: mvn clean package -Dunit-tests.skip=true
      - run:
          name: Copy deployment artifacts to workspace
          command: |
            cp target/demo-0.0.1-SNAPSHOT.jar /tmp/standalone-app.jar

      - store_test_results:
                path: target/surefire-reports

      - store_artifacts:
                path: /tmp/standalone-app.jar

      - persist_to_workspace:
          root: /tmp
          paths:
             - standalone-app.jar

  Unit-Test:

    working_directory: ~/user_managemant_firstinstance

    docker:
      - image: circleci/openjdk:8-jdk-stretch

    steps:
      - checkout

      - run: mvn test

      - store_test_results:
          path: target/surefire-reports

  integration test on unix like:

    working_directory: ~/user_managemant_firstinstance

    docker:
      - image: circleci/openjdk:8-jdk-stretch
      - image: ubuntu:latest

    steps:
      - checkout

      - run: mvn  verify -Dunit-tests.skip=true

      - store_test_results:
          path: target/surefire-reports

  code review:

    working_directory: ~/user_managemant_firstinstance

    docker:
      - image: circleci/openjdk:8-jdk-stretch
      - image: sonarqube

    steps:
      - checkout

      - run:
          name: Analyze on SonarCloud
          command: mvn verify sonar:sonar

  deploy :

    working_directory: ~/user_managemant_firstinstance

    docker:
      - image: circleci/openjdk:8-jdk-stretch

    steps:
      - run:
          name: deploy test
          command: |
            chmod 777 /tmp/standalone-app.jar
            java -jar  /tmp/standalone-app.jar



workflows:
  version: 2
  build-test-and-deploy:
    jobs:
      - build
      - Unit-Test:
          requires:
            - build
      - integration test on unix like:
          requires:
            - build
      - code review:
          context: SonarCloud
          requires:
            - Unit-Test
            - integration test on unix like
      - deploy :
          requires:
            - code review

